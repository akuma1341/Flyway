plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.4.RELEASE'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
	implementation 'org.hibernate:hibernate-envers:5.6.8.Final'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.apache.poi:poi:5.2.2'
	implementation 'com.opencsv:opencsv:5.6'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.hsqldb:hsqldb'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.4.RELEASE'

	testImplementation 'org.hamcrest:hamcrest-all:1.3'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	outputDir 'build/asciidoc'
	sourceDir 'src/docs/asciidoc'
	sources {
		include 'api-guide.adoc'
	}
	configurations 'asciidoctorExt'
}

tasks.named('test') {
	useJUnitPlatform()
}
